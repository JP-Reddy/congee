name: congee

on:
  push:
    branches:
      - main 
  pull_request:
    branches: [ main ]
  schedule:
    - cron:  '0 10 * * 3'

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      name: Setup toolchain
      with:
          toolchain: nightly 
          override: true
          components: rustfmt, clippy
    - uses: actions-rs/cargo@v1
      name: Check 
      with:
          command: clippy 
          args: -- -D warnings
  
  fmt:
    needs: check 
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      name: Setup toolchain
      with:
          toolchain: nightly 
          override: true
          components: rustfmt, clippy
    - uses: actions-rs/cargo@v1
      with:
          command: fmt
          args: --all -- --check
      name: Format check

  test:
    needs: fmt
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      name: Setup toolchain
      with:
          toolchain: nightly
          override: true
    - name: Run cargo-tarpaulin
      uses: actions-rs/tarpaulin@v0.1
      with:
        version: '0.15.0'
        args: '-v -- --test-threads 1'
    - name: Upload to codecov.io
      uses: codecov/codecov-action@v2
      with:
        files: ./target/tarpaulin/cobertura.xml,./cobertura.xml
        flags: unittest

    
  sans:
    needs: fmt 
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      name: Setup toolchain
      with:
          toolchain: nightly
          override: true
          components: rust-src
    - run: sudo ln -s /usr/bin/llvm-symbolizer-6.0 /usr/bin/llvm-symbolizer
    - run: >
        env ASAN_OPTIONS="detect_odr_violation=0" RUSTFLAGS="-Z sanitizer=address" 
        cargo test -Zbuild-std --target x86_64-unknown-linux-gnu --lib
    - run: >
        env ASAN_OPTIONS="detect_odr_violation=0" RUSTFLAGS="-Z sanitizer=memory" 
        cargo test -Zbuild-std --target x86_64-unknown-linux-gnu --lib
  
  fuzzing:
    needs: fmt
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      name: Setup toolchain
      with:
          toolchain: nightly
          override: true
          components: rust-src, llvm-tools-preview
    - run: cargo install cargo-fuzz
    - run: cargo install cargo-cov
    - run: |
        cd fuzz
        wget https://github.com/XiangpengHao/congee/releases/download/0.0.1-corpus/corpus.zip
        unzip corpus.zip
    - run: |
        cd fuzz
        cargo fuzz run btree_check --release --debug-assertions -s address -- -max_len=655350 -runs=0
    - run: |
        cd fuzz
        cargo fuzz coverage btree_check corpus/btree_check
        cargo cov -- show target/x86_64-unknown-linux-gnu/release/btree_check --instr-profile=coverage/btree_check/coverage.profdata > coverage.txt
    - name: Upload to codecov.io
      uses: codecov/codecov-action@v2
      with:
        files: ./fuzz/coverage.txt
        flags: fuzzing


 